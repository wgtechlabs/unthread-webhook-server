# =============================================================================
# UNTHREAD WEBHOOK SERVER - DOCKER COMPOSE CONFIGURATION
# =============================================================================
# Complete application stack for the Unthread Webhook Server
#
# Services:
# ┌─ server            → Main webhook processing application (builds from source)
# └─ redis-webhook     → Redis 8-alpine for webhook message queuing
#
# Docker Container Naming:
#   - server           → unthread-webhook-server-server-1
#   - redis-webhook    → unthread-webhook-server-redis-webhook-1
#
# Usage:
#   docker-compose up -d                    # Start all services
#   docker-compose logs -f server           # View webhook server logs
#   docker-compose exec redis-webhook redis-cli
#   docker-compose down                     # Stop all services
#   docker-compose down -v                  # Stop and remove volumes
#
# Prerequisites: 
#   - Copy .env.example to .env and configure your values
#   - Ensure Docker and Docker Compose are installed
#
# =============================================================================

services:
  # =============================================================================
  # REDIS - WEBHOOK OPERATIONS
  # =============================================================================
  # Dedicated Redis instance for webhook message queuing and communication
  redis-webhook:
    image: redis:8-alpine
    container_name: unthread-webhook-server-redis-webhook-1
    ports:
      - "6379:6379"
    volumes:
      - redis_webhook_data:/data
    command: redis-server --appendonly yes  # Enable data persistence
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - unthread-integration-network

  # =============================================================================
  # WEBHOOK SERVER APPLICATION
  # =============================================================================
  # Main Node.js application that handles webhook processing and Redis queuing
  server:
    build:
      context: .
      tags:
        - unthread-webhook-server:latest  # Explicit image name for consistency
    container_name: unthread-webhook-server-server-1
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      redis-webhook:
        condition: service_healthy  # Wait for Redis to be ready
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - unthread-integration-network

# =============================================================================
# PERSISTENT VOLUMES
# =============================================================================
# Named volumes for data persistence across container restarts
volumes:
  redis_webhook_data:    # Redis webhook queue data

# =============================================================================
# NETWORKING
# =============================================================================
# Docker Compose will automatically create and manage this network
networks:
  unthread-integration-network:
    driver: bridge
    name: unthread-integration-network  # Use explicit name for consistency
